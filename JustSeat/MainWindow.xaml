<Window x:Class="JustSeat.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:JustSeat"
        xmlns:localParameters="clr-namespace:JustSeat.Parameters"
        xmlns:localBehaviors="clr-namespace:JustSeat.Behaviors"
        mc:Ignorable="d"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:localAttached="clr-namespace:JustSeat.AttachedProperties"
        Title="MainWindow" Height="350" Width="525"
        xmlns:localConvertes="clr-namespace:JustSeat.Converter"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:dd="urn:gong-wpf-dragdrop"
        xmlns:localHelpers="clr-namespace:JustSeat.Helpers"
        xmlns:wpfConverters="http://schemas.kent.boogaart.com/converters"
        DataContext="{Binding Main, Source={StaticResource Locator}}"
        xmlns:localResizing="clr-namespace:JustSeat.Resizing"
        >
    <Window.Resources>
        <ResourceDictionary>
            <sys:Double x:Key="tableSize">64</sys:Double>
            
            <localHelpers:BindingProxy  x:Key="bindingProxy" Data="{Binding}"></localHelpers:BindingProxy>
            
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Margin" Value="2" />
                <Setter Property="Padding" Value="5,2,5,2" />
            </Style>

            <Style x:Key="plusButtonStyle" TargetType="{x:Type Button}" >
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <Ellipse Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="LightBlue" />
                                <TextBlock Text="+" FontSize="15" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="0"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Width" Value="16" />
                <Setter Property="Height" Value="16" />
                <Setter Property="Margin" Value="2" />
                <Setter Property="Opacity" Value="0.4" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True" >
                        <Setter Property="Opacity" Value="1" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="minusButtonStyle" TargetType="{x:Type Button}" >
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <Ellipse Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="DarkRed" />
                                <TextBlock Text="-" FontSize="15" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="0"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Width" Value="16" />
                <Setter Property="Height" Value="16" />
                <Setter Property="Margin" Value="2" />
                <Setter Property="Opacity" Value="0.4" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True" >
                        <Setter Property="Opacity" Value="1" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="chairItemsControlStyle" TargetType="{x:Type ItemsControl}">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Grid Margin="2,1,2,1" Width="30" Height="30" dd:DragDrop.IsDropTarget="True" 
                                              dd:DragDrop.DropHandler="{Binding Data.GuestOnChairDropHandler, Source={StaticResource bindingProxy}}" >
                                <Grid.Resources>
                                    <localHelpers:BindingProxy x:Key="chairProxy" Data="{Binding}" />
                                </Grid.Resources>

                                <Button Command="{Binding Data.RemovePersonOrChairCommand, Source={StaticResource bindingProxy}}">
                                    <Button.CommandParameter>
                                        <MultiBinding Converter="{localConvertes:ChairWithinSetMultiValueConverter}">
                                            <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType={x:Type ItemsControl}}"/>
                                            <Binding />
                                            <Binding Path="Person"/>
                                        </MultiBinding>
                                    </Button.CommandParameter>
                                    <Button.Template>
                                        <ControlTemplate>
                                            <Grid>
                                                <Grid.ToolTip>
                                                    <ToolTip>
                                                        <StackPanel>
                                                            <TextBlock FontWeight="Bold" Text="{Binding Person}">
                                                                <TextBlock.Style>
                                                                    <Style TargetType="{x:Type TextBlock}">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding Person}" Value="{x:Null}">
                                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </TextBlock.Style>
                                                            </TextBlock>
                                                            <TextBlock>Click to remove</TextBlock>
                                                        </StackPanel>
                                                    </ToolTip>
                                                </Grid.ToolTip>
                                                <Ellipse  Fill="Wheat"  />
                                                <Viewbox>
                                                    <Label Content="{Binding Person}" Foreground="Black"/>
                                                </Viewbox>
                                                <Grid Name="parent" Visibility="Hidden" IsHitTestVisible="False">
                                                    <Line  X1="0" Y1="0" X2="{Binding ElementName='parent', Path='ActualWidth'}" Y2="{Binding ElementName='parent', Path='ActualHeight'}"  Stroke="Black" StrokeThickness="4" />
                                                    <Line  X1="0" Y1="{Binding ElementName='parent', Path='ActualHeight'}" X2="{Binding ElementName='parent', Path='ActualWidth'}" Y2="0" Stroke="Black" StrokeThickness="4" />
                                                </Grid>
                                            </Grid>
                                            
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="parent" Property="Visibility" Value="Visible" />
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="parent" Storyboard.TargetProperty="Opacity" 
                                                                                 From="0" To="1" RepeatBehavior="Forever" AutoReverse="True" Duration="0:0:0.3"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="verticalChairItemsControlStyle" TargetType="{x:Type ItemsControl}" BasedOn="{StaticResource chairItemsControlStyle}">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" VerticalAlignment="Center"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="100"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>

        <DockPanel>

            <Button DockPanel.Dock="Bottom">Add</Button>
            <ListView ItemsSource="{Binding Guests}" dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True">
                <ListView.View>
                    <GridView>
                            <GridViewColumn DisplayMemberBinding="{Binding Name}" />
                    </GridView>
                </ListView.View>
            </ListView>
        </DockPanel>
        <DockPanel Grid.Column="2">
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Background="Blue" MinHeight="44" >
                <Button Command="{Binding AddTableCommand}">Add Table</Button>
            </StackPanel>

            <ItemsControl ItemsSource="{Binding Items}"  >
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Background="Red"  />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Style.Resources>
                            <ResourceDictionary>
                                <localAttached:Behaviors x:Key="behaviors" x:Shared="False">
                                    <localBehaviors:DragBehavior />
                                </localAttached:Behaviors>
                            </ResourceDictionary>
                        </Style.Resources>
                        <Setter Property="Canvas.Left" Value="{Binding Path=X, Mode=TwoWay}" />
                        <Setter Property="Canvas.Top" Value="{Binding Path=Y, Mode=TwoWay}" />
                        <Setter Property="Width" Value="{Binding Path=Width, Converter={localConvertes:ValueWithAdditionConverter AdditionValue={StaticResource tableSize}}, Mode=TwoWay}" />
                        <Setter Property="Height" Value="{Binding Path=Length, Converter={localConvertes:ValueWithAdditionConverter AdditionValue={StaticResource tableSize}}, Mode=TwoWay}" />
                        <Setter Property="localAttached:SupplementaryInteraction.Behaviors" Value="{StaticResource behaviors}"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
                
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ContentControl>
                            <ContentControl.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <ContentPresenter x:Name="Presenter" Content="{TemplateBinding ContentControl.Content}" Margin="{TemplateBinding Padding}"/>
                                        
                                        <Grid x:Name="BoundingGrid" Opacity="0" Margin="-5">
                                            <localResizing:ResizeThumb DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}" Grid.Column="1" Grid.Row="2" Height="6" Width="12" VerticalAlignment="Top" Cursor="ScrollN"/>
                                            <localResizing:ResizeThumb DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}"  Grid.Column="1" Grid.Row="2" Height="6" Width="12" VerticalAlignment="Bottom" Cursor="ScrollS"/>
                                            <localResizing:ResizeThumb DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}"  Grid.Column="1" Grid.Row="2" Height="12" Width="6" VerticalAlignment="Center" HorizontalAlignment="Left" Cursor="ScrollW"/>
                                            <localResizing:ResizeThumb DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}"  Grid.Column="1" Grid.Row="2" Height="12" Width="6" VerticalAlignment="Center" HorizontalAlignment="Right" Cursor="ScrollE"/>
                                        </Grid>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3" Storyboard.TargetName="BoundingGrid"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"  To="0"   Duration="0:0:0.2" Storyboard.TargetName="BoundingGrid"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                    </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                                
                            </ContentControl.Template>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="{Binding Width, Mode=OneWay}"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="{Binding Length, Mode=OneWay}"/>
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <ItemsControl ItemsSource="{Binding TopChairs}" Grid.Column="1" Style="{StaticResource chairItemsControlStyle}" />
                                <ItemsControl ItemsSource="{Binding LeftChairs}" Grid.Row="1" Style="{StaticResource verticalChairItemsControlStyle}" />
                                <ItemsControl ItemsSource="{Binding BottomChairs}" Grid.Row="2" Grid.Column="1" Style="{StaticResource chairItemsControlStyle}" />
                                <ItemsControl ItemsSource="{Binding RightChairs}" Grid.Row="1" Grid.Column="2" Style="{StaticResource verticalChairItemsControlStyle}" />
                                <Border Margin="2" Background="Green" Grid.Column="1" Grid.Row="1" >
                                    <Border.ContextMenu>
                                        <ContextMenu>
                                            <ContextMenu.Items>
                                                <MenuItem Header="Remove table" Command="{Binding Data.RemoveTableCommand, Source={StaticResource bindingProxy}}" CommandParameter="{Binding }" />
                                            </ContextMenu.Items>
                                        </ContextMenu>
                                    </Border.ContextMenu>
                                    <DockPanel>
                                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" HorizontalAlignment="Center">
                                            <Button Style="{StaticResource plusButtonStyle}" Command="{Binding Data.AddTopChairCommand, Source={StaticResource bindingProxy}}" CommandParameter="{Binding}"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" HorizontalAlignment="Center">
                                            <Button Style="{StaticResource plusButtonStyle}" Command="{Binding Data.AddBottomChairCommand, Source={StaticResource bindingProxy}}" CommandParameter="{Binding}"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Vertical" DockPanel.Dock="Left" VerticalAlignment="Center">
                                            <Button Style="{StaticResource plusButtonStyle}" Command="{Binding Data.AddLeftChairCommand, Source={StaticResource bindingProxy}}" CommandParameter="{Binding}"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Vertical" DockPanel.Dock="Right" VerticalAlignment="Center">
                                            <Button Style="{StaticResource plusButtonStyle}" Command="{Binding Data.AddRightChairCommand, Source={StaticResource bindingProxy}}" CommandParameter="{Binding}"/>
                                        </StackPanel>
                                        <Grid></Grid>
                                    </DockPanel>
                                </Border>
                            </Grid>
                        </ContentControl>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </DockPanel>
    </Grid>
</Window>
